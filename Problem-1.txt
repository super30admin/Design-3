//https://leetcode.com/problems/flatten-nested-list-iterator/
//tc-O(1)
//sc- O(n)
//using Stack
public class NestedIterator implements Iterator<Integer> {
   Stack<Iterator<NestedInteger>> s;
    NestedInteger nextEl;

    public NestedIterator(List<NestedInteger> nestedList) {
        s = new Stack<>();
        s.push(nestedList.iterator());
    }

    @Override
    public Integer next() {
        return nextEl.getInteger();
    }

    @Override
    public boolean hasNext() {
        while(!s.isEmpty()){
            if(!s.peek().hasNext()){
               s.pop();
                
            }
            else if((nextEl = s.peek().next()).isInteger()){                
                return true;
            }
            else{                
                s.push(nextEl.getList().iterator());
            }
        }
        
        return false;
    }
    
   
    }


/**
 * Your NestedIterator object will be instantiated and called as such:
 * NestedIterator i = new NestedIterator(nestedList);
 * while (i.hasNext()) v[f()] = i.next();
 */